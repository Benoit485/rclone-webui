# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Semantic Version Release

#on:
#  push:
#    branches: [ master ]

on:
  workflow_dispatch

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:    
    - run: git describe --tags --abbrev=0 --match=v*[0-9.] master~1
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: zip build.zip $(find build)

    - name: Generate version
      id: version
      uses: paulhatch/semantic-version@v4.0.2
      with:
        # The prefix to use to identify tags
        tag_prefix: "v"
        # A string which, if present in a git commit, indicates that a change represents a
        # major (breaking) change, supports regular expressions wrapped with '/'
        major_pattern: "(MAJOR)"
        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "(MINOR)"
        # A string to determine the format of the version output
        format: "${major}.${minor}.${patch}-prerelease${increment}"
        # If this is set to true, *every* commit will be treated as a new version.
        bump_each_commit: true

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v0.1.13
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ steps.version.outputs.version_tag }}
        name: ${{ steps.version.outputs.version }}
        draft: false
        prerelease: false
        fail_on_unmatched_files: true
        files: |
          build.zip
          README.md
          LICENSE
